[{"authors":["admin"],"categories":null,"content":"Computer scientist working on finding techniques for the secure and efficient implementation of cryptographic algorithms.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://armfazh.github.io/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"authors","summary":"Computer scientist working on finding techniques for the secure and efficient implementation of cryptographic algorithms.","tags":null,"title":"","type":"authors"},{"authors":["Armando Faz-Hernández","Julio López","Ricardo Dahab"],"categories":null,"content":"","date":1561939200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561939200,"objectID":"7e5a06e7e25fb7d2bf5e21140b92cdd8","permalink":"https://armfazh.github.io/publication/faz-lop-dah-toms-2019/","publishdate":"2020-04-25T13:30:38.698825Z","relpermalink":"/publication/faz-lop-dah-toms-2019/","section":"publication","summary":" Elliptic curve cryptosystems are considered an efficient alternative to conventional systems such as DSA and RSA. Recently, Montgomery and Edwards elliptic curves have been used to implement cryptosystems. In particular, the elliptic curves Curve25519 and Curve448 were used for instantiating Diffie-Hellman protocols named X25519 and X448. Mapping these curves to twisted Edwards curves allowed deriving two new signature instances, called Ed25519 and Ed448, of the Edwards Digital Signature Algorithm. In this work, we focus on the secure and efficient software implementation of these algorithms using SIMD parallel processing. We present software techniques that target the Intel AVX2 vector instruction set for accelerating prime field arithmetic and elliptic curve operations. Our contributions result in a high-performance software library for AVX2-ready processors. For example, our library computes digital signatures 19% (for Ed25519) and 29% (for Ed448) faster than previous optimized implementations. Also, our library improves by 10% and 20% the execution time of X25519 and X448, respectively. ","tags":null,"title":"High-performance Implementation of Elliptic Curve Cryptography Using Vector Instructions","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López","Eduardo Ochoa-Jiménez","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1541030400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541030400,"objectID":"1052d65b2fbb93e0075a93527c4e018b","permalink":"https://armfazh.github.io/publication/faz-lop-och-rod-2017/","publishdate":"2020-04-25T13:30:38.705435Z","relpermalink":"/publication/faz-lop-och-rod-2017/","section":"publication","summary":" Since its introduction by Jao and De Feo in 2011, the supersingular isogeny Diffie-Hellman (SIDH) key exchange protocol has positioned itself as a promising candidate for post-quantum cryptography. One salient feature of the SIDH protocol is that it requires exceptionally short key sizes. However, the latency associated to SIDH is higher than the ones reported for other post-quantum cryptosystem proposals. Aiming to accelerate the SIDH runtime performance, we present in this work several algorithmic optimizations targeting both elliptic-curve and field arithmetic operations. We introduce in the context of the SIDH protocol a more efficient approach for calculating the elliptic curve operation $P+[k]Q$. Our strategy achieves a factor 1.4 speedup compared with the popular variable-three-point ladder algorithm regularly used in the SIDH shared secret phase. Moreover, profiting from pre-computation techniques our algorithm yields a factor 1.7 acceleration for the computation of this operation in the SIDH key generation phase. We also present an optimized evaluation of the point tripling formula, and discuss several algorithmic and implementation techniques that lead to faster field arithmetic computations. A software implementation of the above improvements on an Intel Skylake Core i7-6700 processor gives a factor 1.33 speedup against the state-of-the-art software implementation of the SIDH protocol reported by Costello-Longa-Naehrig in CRYPTO 2016. ","tags":["sidh protocol","montgomery ladder","post-quantum cryptography","montgomery reduction"],"title":"A Faster Software Implementation of the Supersingular Isogeny Diffie-Hellman Key Exchange Protocol","type":"publication"},{"authors":["Thomaz Oliveira","Julio López","Hüseyin Hişil","Armando Faz-Hernández","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"41d3f95dc27d3002e4efb58ec02cda56","permalink":"https://armfazh.github.io/publication/oliveira-lhfr-2017/","publishdate":"2020-04-25T13:30:38.70398Z","relpermalink":"/publication/oliveira-lhfr-2017/","section":"publication","summary":" In the RFC 7748 memorandum, the Internet Research Task Force specified a Montgomery-ladder scalar multiplication function based on two recently adopted elliptic curves, Curve25519 and Curve448. The purpose of this function is to support the Diffie-Hellman key exchange algorithm that will be included in the forthcoming version of the Transport Layer Security cryptographic protocol. In this paper, we describe a ladder variant that permits to accelerate the fixed-point multiplication function inherent to the Diffie-Hellman key pair generation phase. Our proposal combines a right-to-left version of the Montgomery ladder along with the pre-computation of constant values directly derived from the base-point and its multiples. To our knowledge, this is the first proposal of a Montgomery ladder procedure for prime elliptic curves that admits the extensive use of pre-computation. In exchange of very modest memory resources and a small extra programming effort, the proposed ladder obtains significant speedups for software implementations. Moreover, our proposal fully complies with the RFC 7748 specification. A software implementation of the X25519 and X448 functions using our pre-computable ladder yields an acceleration factor of roughly 1.20, and 1.25 when implemented on the Haswell and the Skylake micro-architectures, respectively. ","tags":null,"title":"How to (Pre-)Compute a Ladder: Improving the Performance of X25519 and X448","type":"publication"},{"authors":["Armando Faz-Hernandez","Julio López","Ana Karina D. S. de Oliveira"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"eca5fb827bd56b20e2c6f41df6f5327e","permalink":"https://armfazh.github.io/publication/faz-lop-oli-2018/","publishdate":"2020-04-25T13:30:38.706229Z","relpermalink":"/publication/faz-lop-oli-2018/","section":"publication","summary":" The latest processors have included extensions to the instruction set architecture tailored to speed up the execution of cryptographic algorithms. Like the AES New Instructions (AES-NI) that target the AES encryption algorithm, the release of the SHA New Instructions (SHA-NI), designed to support the SHA-256 hash function, introduces a new scenario for optimizing cryptographic software. In this work, we present a performance evaluation of several cryptographic algorithms, hash-based signatures and data encryption, on platforms that support AES-NI and/or SHA-NI. In particular, we revisited several optimization techniques targeting multiple-message hashing, and as a result, we reduce by 21% the running time of this task by means of a pipelined SHA-NI implementation. In public-key cryptography, multiple-message hashing is one of the critical operations of the XMSS and XMSS^MT post-quantum hash-based digital signatures. Using SHA-NI extensions, signatures are computed 4x faster; however, our pipelined SHA-NI implementation increased this speedup factor to 4.3x. For symmetric cryptography, we revisited the implementation of AES modes of operation and reduced by 12% and 7% the running time of CBC decryption and CTR encryption, respectively. ","tags":["aes-ni","data encryption","hash-based digital signatures","sha-ni","vector instructions"],"title":"SoK: A Performance Evaluation of Cryptographic Instruction Sets on Modern Architectures","type":"publication"},{"authors":["Armando Faz-Hernández","Hayato Fujii","Diego F. Aranha","Julio López"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"f415da7d52974c1aa400c6b27ecd41e1","permalink":"https://armfazh.github.io/publication/faz-fujii-aranha-lopez-2017/","publishdate":"2020-04-25T13:30:38.701299Z","relpermalink":"/publication/faz-fujii-aranha-lopez-2017/","section":"publication","summary":" Digital signatures provide a means to publicly authenticate messages sent over an insecure channel. Recently, the Quotient Digital Signature Algorithm (qDSA) was introduced aiming key-compatibility with the Diffie-Hellman X25519 function. Due to the novelty of qDSA, there remains a need for an optimized implementation that allows identifying the real impact of this new algorithm. In this work, we focus on the secure and efficient implementation of qDSA. By leveraging the use of precomputation on the right-to-left Joye's algorithm, we reduced the running time of signature generation by 30-35%, and the running time of the verification procedure by 19%. In addition, for increased security, we show a verification method that validates qDSA signatures unequivocally. All of these improvements were included into an optimized software library targeting 32-bit ARM and 64-bit Intel architectures. The improved performance achieved in these platforms, it positions qDSA as a competitive alternative for deploying digital signatures efficiently and securely. ","tags":null,"title":"A Secure and Efficient Implementation of the Quotient Digital Signature Algorithm (qDSA)","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1477958400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477958400,"objectID":"d49e3cc801f0757b8875cbc8f2223805","permalink":"https://armfazh.github.io/publication/faz-lopez-2016/","publishdate":"2020-04-25T13:30:38.699793Z","relpermalink":"/publication/faz-lopez-2016/","section":"publication","summary":" The P-384 is one of the standardized elliptic curves by ANSI and NIST. This curve provides a 192-bit security level and is used in the computation of digital signatures and key-agreement protocols. Although several publicly-available cryptographic libraries support the P-384 curve, they have a poor performance. In this work, we present software techniques for accelerating cryptographic operations using the P-384 curve; first, we use the latest vector instructions of Intel processors to implement the prime field arithmetic; second, we devise a parallel scheduling of the complete formulas for point addition law. As a result, on Skylake micro-architecture, our software implementation is 15% and 40% faster than the OpenSSL library for computing ECDSA signatures and the ECDH protocol, respectively. ","tags":null,"title":"Speeding up Elliptic Curve Cryptography on the P-384 Curve","type":"publication"},{"authors":["Armando Faz-Hernández","Patrick Longa","Ana H. Sánchez"],"categories":null,"content":"","date":1427846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1427846400,"objectID":"1c2a987c51935df7d073102abfdc7d24","permalink":"https://armfazh.github.io/publication/faz-longa-sanchez-2015/","publishdate":"2020-04-25T13:30:38.701942Z","relpermalink":"/publication/faz-longa-sanchez-2015/","section":"publication","summary":" We propose efficient algorithms and formulas that improve the performance of side channel protected elliptic curve computations with special focus on scalar multiplication exploiting the Gallant-Lambert-Vanstone (CRYPTO 2001) and Galbraith-Lin-Scott (EUROCRYPT 2009) methods. Firstly, by adapting Feng et al.'s recoding to the GLV setting, we derive new regular algorithms for variable-base scalar multiplication that offer protection against simple side-channel and timing attacks. Secondly, we propose an efficient, side-channel protected algorithm for fixed-base scalar multiplication which combines Feng et al.'s recoding with Lim-Lee's comb method. Thirdly, we propose an efficient technique that interleaves ARM and NEON-based multiprecision operations over an extension field to improve performance of GLS curves on modern ARM processors. Finally, we showcase the efficiency of the proposed techniques by implementing a state-of-the-art GLV-GLS curve in twisted Edwards form defined over $F_p^2$, which supports a four-dimensional decomposition of the scalar and is fully protected against timing attacks. Analysis and performance results are reported for modern x64 and ARM processors. For instance, we compute a variable-base scalar multiplication in 89,000 and 244,000 cycles on an Intel Ivy Bridge and an ARM Cortex-A15 processor (respect.); using a precomputed table of 6KB, we compute a fixed-base scalar multiplication in 49,000 and 116,000 cycles (respect.); and using a precomputed table of 3KB, we compute a double-scalar multiplication in 115,000 and 285,000 cycles (respect.). The proposed techniques represent an important improvement of the state-of-the-art performance of elliptic curve computations, and allow us to set new speed records in several modern processors. The techniques also reduce the cost of adding protection against timing attacks in the computation of GLV-based variable-base scalar multiplication to below 10%. This work is the extended version of a publication that appeared at CT-RSA (Faz-Hernández et al. Topics in Cryptology, CT-RSA 2014, vol. 8366, pp. 1-27 2014). ","tags":null,"title":"Efficient and secure algorithms for GLV-based scalar multiplication and their implementation on GLV-GLS curves (extended version)","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"0389575dfc99e565b4e6adb87f94d4dd","permalink":"https://armfazh.github.io/publication/faz-lopez-2015/","publishdate":"2020-04-25T13:30:38.703366Z","relpermalink":"/publication/faz-lopez-2015/","section":"publication","summary":" AVX2 is the newest instruction set on the Intel Haswell processor that provides simultaneous execution of operations over vectors of 256 bits. This work presents the advances on the applicability of AVX2 on the development of an efficient software implementation of the elliptic curve Diffie-Hellman protocol using the Curve25519 elliptic curve. Also, we will discuss some advantages that vector instructions offer as an alternative method to accelerate prime field and elliptic curve arithmetic. The performance of our implementation shows a slight improvement against the fastest state-of-the-art implementations. ","tags":null,"title":"Fast Implementation of Curve25519 Using AVX2","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1414800000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1414800000,"objectID":"7f759fd6bbf5f0c643df8de1da64e919","permalink":"https://armfazh.github.io/publication/faz-lopez-2014/","publishdate":"2020-04-25T13:30:38.700556Z","relpermalink":"/publication/faz-lopez-2014/","section":"publication","summary":" AVX2 is the newest instruction set on Intel Haswell processor that provides simultaneous execution of operations over vectors of data. This work presents the advances on the applicability of AVX2 on the development of prime field arithmetic, which is a building block for the construction of Elliptic Curve Cryptosystems. Having as a goal the efficient and secure implementation of prime field arithmetic, we show some advantages that vector instructions offer compared against 64-bit implementations. In order to validate the results of our research, we present a benchmark obtained on a Haswell processor. ","tags":null,"title":"On Software Implementation of Arithmetic Operations on Prime Fields using AVX2","type":"publication"},{"authors":["Armando Faz-Hernández","Patrick Longa","Ana H. Sánchez"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"ed706ddcf57d05b40d09060caa5a777c","permalink":"https://armfazh.github.io/publication/faz-longa-sanchez-2014/","publishdate":"2020-04-25T13:30:38.702711Z","relpermalink":"/publication/faz-longa-sanchez-2014/","section":"publication","summary":" We propose efficient algorithms and formulas that improve the performance of side-channel protected scalar multiplication exploiting the Gallant-Lambert-Vanstone (CRYPTO 2001) and Galbraith-Lin-Scott (EUROCRYPT 2009) methods. Firstly, by adapting Feng et al.'s recoding to the GLV setting, we derive new regular algorithms for variable-base scalar multiplication that offer protection against simple side-channel and timing attacks. Secondly, we propose an efficient technique that interleaves ARM-based and NEON-based multiprecision operations over an extension field, as typically found on GLS curves and pairing computations, to improve performance on modern ARM processors. Finally, we showcase the efficiency of the proposed techniques by implementing a state-of-the-art GLV-GLS curve in twisted Edwards form defined over $F_p^2$, which supports a four dimensional decomposition of the scalar and runs in constant time, i.e., it is fully protected against timing attacks. For instance, using a precomputed table of only 512 bytes, we compute a variable-base scalar multiplication in 92,000 cycles on an Intel Ivy Bridge processor and in 244,000 cycles on an ARM Cortex-A15 processor. Our benchmark results and the proposed techniques contribute to the improvement of the state-of-the-art performance of elliptic curve computations. Most notably, our techniques allow us to reduce the cost of adding protection against timing attacks in the GLV-based variable-base scalar multiplication computation to below 10%. ","tags":null,"title":"Efficient and Secure Algorithms for GLV-Based Scalar Multiplication and Their Implementation on GLV-GLS Curves","type":"publication"},{"authors":["Diego F. Aranha","Armando Faz-Hernández","Julio López","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"fb2d35de6c075f5a49d595dc7133d766","permalink":"https://armfazh.github.io/publication/ara-faz-lop-rod-2012/","publishdate":"2020-04-25T13:30:38.706913Z","relpermalink":"/publication/ara-faz-lop-rod-2012/","section":"publication","summary":" We design a state-of-the-art software implementation of field and elliptic curve arithmetic in standard Koblitz curves at the 128-bit security level. Field arithmetic is carefully crafted by using the best formulae and implementation strategies available, and the increasingly common native support to binary field arithmetic in modern desktop computing platforms. The $i$-th power of the Frobenius automorphism on Koblitz curves is exploited to obtain new and faster interleaved versions of the well-known $τ$-NAF scalar multiplication algorithm. The usage of the $τ$^⌊m/3⌋ and $τ$^⌊m/4⌋ maps are employed to create analogues of the 3- and 4-dimensional GLV decompositions and in general, the $⌊m/s⌋$-th power of the Frobenius automorphism is applied as an analogue of an $s$-dimensional GLV decomposition. The effectiveness of these techniques is illustrated by timing the scalar multiplication operation for fixed, random and multiple points. In particular, our library is able to compute a random point scalar multiplication in just below 105 clock cycles, which sets a new speed record across all curves with or without endomorphisms defined over binary or prime fields. The results of our optimized implementation suggest a trade-off between speed, compliance with the published standards and side-channel protection. Finally, we estimate the performance of curve-based cryptographic protocols instantiated using the proposed techniques and compare our results to related work. ","tags":null,"title":"Faster Implementation of Scalar Multiplication on Koblitz Curves","type":"publication"},{"authors":["Jonathan Taverne","Armando Faz-Hernández","Diego F. Aranha","Francisco Rodríguez-Henríquez","Darrel Hankerson","Julio López"],"categories":null,"content":"","date":1314835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1314835200,"objectID":"7318dce50ecabfee4c95b09426ffaeda","permalink":"https://armfazh.github.io/publication/tav-faz-ara-rod-han-lop-jcen-2011/","publishdate":"2020-04-25T13:30:38.704658Z","relpermalink":"/publication/tav-faz-ara-rod-han-lop-jcen-2011/","section":"publication","summary":" The availability of a new carry-less multiplication instruction in the latest Intel desktop processors significantly accelerates multiplication in binary fields and hence presents the opportunity for reevaluating algorithms for binary field arithmetic and scalar multiplication over elliptic curves. We describe how to best employ this instruction in field multiplication and the effect on performance of doubling and halving operations. Alternate strategies for implementing inversion and half-trace are examined to restore most of their competitiveness relative to the new multiplier. These improvements in field arithmetic are complemented by a study on serial and parallel approaches for Koblitz and random curves, where parallelization strategies are implemented and compared. The contributions are illustrated with experimental results improving the state-of-the-art performance of halving and doubling-based scalar multiplication on NIST curves at the 112- and 192-bit security levels and a new speed record for side-channel-resistant scalar multiplication in a random curve at the 128-bit security level. The algorithms presented in this work were implemented on Westmere and Sandy Bridge processors, the latest generation Intel microarchitectures. ","tags":null,"title":"Speeding scalar multiplication over binary elliptic curves using the new carry-less multiplication instruction","type":"publication"},{"authors":["Jonathan Taverne","Armando Faz-Hernández","Diego F. Aranha","Francisco Rodríguez-Henríquez","Darrel Hankerson","Julio López"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293840000,"objectID":"63072232d2fef1cccb73bc28bb05e763","permalink":"https://armfazh.github.io/publication/tav-faz-ara-rod-han-lop-ches-2011/","publishdate":"2020-04-25T13:30:38.707605Z","relpermalink":"/publication/tav-faz-ara-rod-han-lop-ches-2011/","section":"publication","summary":" The availability of a new carry-less multiplication instruction in the latest Intel desktop processors significantly accelerates multiplication in binary fields and hence presents the opportunity for reevaluating algorithms for binary field arithmetic and scalar multiplication over elliptic curves. We describe how to best employ this instruction in field multiplication and the effect on performance of doubling and halving operations. Alternate strategies for implementing inversion and half-trace are examined to restore most of their competitiveness relative to the new multiplier. These improvements in field arithmetic are complemented by a study on serial and parallel approaches for Koblitz and random curves, where parallelization strategies are implemented and compared. The contributions are illustrated with experimental results improving the state-of-the-art performance of halving and doubling-based scalar multiplication on NIST curves at the 112- and 192-bit security levels, and a new speed record for side-channel resistant scalar multiplication in a random curve at the 128-bit security level. ","tags":null,"title":"Software Implementation of Binary Elliptic Curves: Impact of the Carry-Less Multiplier on Scalar Multiplication","type":"publication"}]