
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Computer scientist interested on cryptography and information security.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1558257810,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Computer scientist interested on cryptography and information security.","tags":null,"title":"Armando Faz","type":"authors"},{"authors":["Armando Faz-Hernandez","Sam Scott","Nick Sullivan","Riad S. Wahby","Christopher A. Wood"],"categories":null,"content":"","date":1690848000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1690848000,"objectID":"808913c86e19090797eafab5b32e4b98","permalink":"https://armfazh.github.io/publication/rfc-9380/","publishdate":"2023-11-06T02:22:22.81447Z","relpermalink":"/publication/rfc-9380/","section":"publication","summary":"This document specifies a number of algorithms for encoding or hashing an arbitrary string to a point on an elliptic curve. This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.","tags":["RFC9380","hash","elliptic curves","random oracle","hash to curves"],"title":"Hashing to Elliptic Curves","type":"publication"},{"authors":["Watson Ladd","Tanya Verma","Marloes Venema","Armando Faz-Hernández","Brendan McMillion","Avani Wildani","Nick Sullivan"],"categories":null,"content":"","date":1688169600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1688169600,"objectID":"1d0dd4611a8edaa9acbf1f80a7553386","permalink":"https://armfazh.github.io/publication/ladd-vvfmws-atc-2023/","publishdate":"2023-11-06T02:22:22.837393Z","relpermalink":"/publication/ladd-vvfmws-atc-2023/","section":"publication","summary":"TLS termination, which is essential to network and security infrastructure providers, is an extremely latency-sensitive operation that benefits from access to sensitive key material close to the edge. However, increasing regulatory concerns prompt customers to demand sophisticated controls on where their keys may be accessed. While traditional access-control solutions rely on a highly-available centralized process to enforce access, the round-trip latency and decreased fault tolerance make this approach unappealing. Furthermore, the desired level of customer control is at odds with the homogeneity of the distribution process for each key. To solve this dilemma, we have designed and implemented Portunus, a cryptographic storage and access control system built using a variant of public-key cryptography called attribute-based encryption (ABE). Using Portunus, TLS keys are protected using ABE under a policy chosen by the customer. Each server is issued unique ABE keys based on its attributes, allowing it to decrypt only the TLS keys for which it satisfies the policy. Thus, the encrypted keys can be stored at the edge, with access control enforced passively through ABE. If a server receives a TLS connection but is not authorized to decrypt the necessary TLS key, the request is forwarded directly to the nearest authorized server, further avoiding the need for a centralized coordinator. In comparison, a trivial instantiation of this system using standard public-key cryptography might wrap each TLS key with the key of every authorized data center. This strategy, however, multiplies the storage overhead by the number of data centers. Deployed across Cloudflare's 400+ global data centers, Portunus handles millions of requests per second globally, making it one of the largest deployments of ABE.","tags":["attribute-based encryption","bilinear pairings","public-key encryption"],"title":"Portunus: Re-imagining Access Control in Distributed Systems","type":"publication"},{"authors":["Armando Faz-Hernández"],"categories":null,"content":"","date":1661990400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1661990400,"objectID":"8fe8e231950de1e6b22bbe63b141041c","permalink":"https://armfazh.github.io/publication/faz-phd-thesis/","publishdate":"2023-11-06T02:22:22.877697Z","relpermalink":"/publication/faz-phd-thesis/","section":"publication","summary":"Cryptography based on elliptic curves is endowed with efficient methods for public-key cryptography. Recent research has shown the superiority of the Montgomery and Edwards curves over the Weierstrass curves as they require fewer arithmetic operations. Using these modern curves has, however, introduced several challenges to the cryptographic algorithm’s design, opening up new opportunities for optimization. Our main objective is to propose algorithmic optimizations and implementation techniques for cryptographic algorithms based on elliptic curves. In order to speed up the execution of these algorithms, our approach relies on the use of extensions to the instruction set architecture. In addition to those specific for cryptography, we use extensions that follow the Single Instruction, Multiple Data (SIMD) parallel computing paradigm. In this model, the processor executes the same operation over a set of data in parallel. We investigated how to apply SIMD to the implementation of elliptic curve algorithms. As part of our contributions, we design parallel algorithms for prime field and elliptic curve arithmetic. We also design a new three-point ladder algorithm for the scalar multiplication $P+kQ$, and a faster formula for calculating $3P$ on Montgomery curves. These algorithms have found applicability in isogeny-based cryptography. Using SIMD extensions such as SSE, AVX, and AVX2, we develop optimized implementations of the following cryptographic algorithms: X25519, X448, SIDH, ECDH, ECDSA, EdDSA, and qDSA. Performance benchmarks show that these implementations are faster than existing implementations in the state of the art. Our study confirms that using extensions to the instruction set architecture is an effective tool for optimizing implementations of cryptographic algorithms based on elliptic curves. May this be an incentive not only for those seeking to speed up programs in general but also for computer manufacturers to include more advanced extensions that support the increasing demand for cryptography.","tags":["elliptic curves","SIMD","AVX2","Curve25519","digital signatures"],"title":"High-Performance Elliptic Curve Cryptography: A SIMD Approach to Modern Curves","type":"publication"},{"authors":["Tara Whalen","Thibault Meunier","Mrudula Kodali","Alex Davidson","Marwan Fayed","Armando Faz-Hernández","Watson Ladd","Deepak Maram","Nick Sullivan","Benedikt Christoph Wolters","Maxime Guerreiro","Andrew Galloni"],"categories":null,"content":"","date":1659312000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1659312000,"objectID":"18601b32e6e12b5d52fc7bb9adadbf64","permalink":"https://armfazh.github.io/publication/whalen-mkdfflmswgg-soups-2022/","publishdate":"2023-11-06T02:22:22.857778Z","relpermalink":"/publication/whalen-mkdfflmswgg-soups-2022/","section":"publication","summary":"CAPTCHAs are necessary to protect websites from bots and malicious crawlers, yet are increasingly solvable by automated systems. This has led to more challenging tests that require greater human effort and cultural knowledge; they may prevent bots effectively but sacrifice usability and discourage the human users they are meant to admit. We propose a new class of challenge: a Cryptographic Attestation of Personhood (CAP) as the foundation of a usable, pro-privacy alternative. Our challenge is constructed using the open Web Authentication API (WebAuthn) that is supported in most browsers. We evaluated the CAP challenge through a public demo, with an accompanying user survey. Our evaluation indicates that CAP has a strong likelihood of adoption by users who possess the necessary hardware, showing good results for effectiveness and efficiency as well as a strong expressed preference for using CAP over traditional CAPTCHA solutions. In addition to demonstrating a mechanism for more usable challenge tests, we identify some areas for improvement for the WebAuthn user experience, and reflect on the difficult usable privacy problems in this domain and how they might be mitigated.","tags":["CAPTCHA","attestation","WebAuthn","zero-knowledge proofs"],"title":"Let The Right One In: Attestation as a Usable CAPTCHA Alternative","type":"publication"},{"authors":["Sofía Celi","Armando Faz-Hernández","Nick Sullivan","Goutam Tamvada","Luke Valenta","Thom Wiggers","Bas Westerbaan","Christopher A. Wood"],"categories":null,"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"dd8ff1f6dd6e4174b95e06534c48aac6","permalink":"https://armfazh.github.io/publication/celi-fstvwww-latincrypt-2021/","publishdate":"2023-11-06T02:22:22.916757Z","relpermalink":"/publication/celi-fstvwww-latincrypt-2021/","section":"publication","summary":"KEMTLS is a novel alternative to the Transport Layer Security (TLS) handshake that integrates post-quantum algorithms. It uses key encapsulation mechanisms (KEMs) for both confidentiality and authentication, achieving post-quantum security while obviating the need for expensive post-quantum signatures. The original KEMTLS paper presents a security analysis, Rust implementation, and benchmarks over emulated networks. In this work, we provide full Go implementations of KEMTLS and other post-quantum handshake alternatives, describe their integration into a distributed system, and provide performance evaluations over real network conditions. We compare the standard (non-quantum-resistant) TLS 1.3 handshake with three alternatives: one that uses post-quantum signatures in combination with post-quantum KEMs (PQTLS), one that uses KEMTLS, and one that is a reduced round trip version of KEMTLS (KEMTLS-PDK). In addition to the performance evaluations, we discuss how the design of these protocols impacts TLS from an implementation and configuration perspective.","tags":["TLS","post-quantum cryptography","KEM"],"title":"Implementing and Measuring KEMTLS","type":"publication"},{"authors":["Watson Ladd, Armando Faz-Hernández","Deepak Maram"],"categories":null,"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"f6823901ee000833ce1900987a81192c","permalink":"https://armfazh.github.io/publication/faz-lm-sac-2021/","publishdate":"2023-11-06T02:22:22.898926Z","relpermalink":"/publication/faz-lm-sac-2021/","section":"publication","summary":" Cryptographic keys are increasingly stored in dedicated hardware or behind software interfaces. Doing so limits access, such as permitting only signing via ECDSA. This makes using them in existing ring and group signature schemes impossible as these schemes assume the ability to access the private key for other operations. We present a $\\Sigma$-protocol that uses a committed public key to verify an ECDSA or Schnorr signature on a message, without revealing the public key. We then discuss how this protocol may be used to derive ring signatures in combination with Groth–Kohlweiss membership proofs and other applications. This scheme has been implemented and source code is freely available.","tags":["elliptic curves","zero-knowledge proofs","attestation","digital signatures"],"title":"ZKAttest: Ring and Group Signatures for existing ECDSA keys","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1601510400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601510400,"objectID":"a72a270959f0a9483e660f82433aaee2","permalink":"https://armfazh.github.io/publication/faz-lopez-sbseg-2020/","publishdate":"2023-11-06T02:22:22.9365Z","relpermalink":"/publication/faz-lopez-sbseg-2020/","section":"publication","summary":"A hash to curve function H, mapping bit strings to points on an elliptic curve, is often required in cryptographic schemes based on elliptic curves. Its construction is based on a deterministic encoding and a cryptographic hash function, which complementarily dominate its execution time. To improve the performance of $H$, we propose a parallel strategy where two units execute in tandem the internal operations of $H$. We instantiate this approach with a parallel software implementation of a hash to curve function that outputs points on a twisted Edwards curve. A performance benchmark on Haswell and Skylake micro-architectures shows that our parallel implementation is 1.4 times faster than its sequential implementation.","tags":["elliptic curves","SIMD","AVX2","hash to curve"],"title":"Generation of Elliptic Curve Points in Tandem","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López","Ricardo Dahab"],"categories":null,"content":"","date":1561939200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561939200,"objectID":"297e4a4090eb30958f649aa0b48248d2","permalink":"https://armfazh.github.io/publication/faz-ld-toms-2019/","publishdate":"2023-11-06T02:22:22.954001Z","relpermalink":"/publication/faz-ld-toms-2019/","section":"publication","summary":"Elliptic curve cryptosystems are considered an efficient alternative to conventional systems such as DSA and RSA. Recently, Montgomery and Edwards elliptic curves have been used to implement cryptosystems. In particular, the elliptic curves Curve25519 and Curve448 were used for instantiating Diffie-Hellman protocols named X25519 and X448. Mapping these curves to twisted Edwards curves allowed deriving two new signature instances, called Ed25519 and Ed448, of the Edwards Digital Signature Algorithm. In this work, we focus on the secure and efficient software implementation of these algorithms using SIMD parallel processing. We present software techniques that target the Intel AVX2 vector instruction set for accelerating prime field arithmetic and elliptic curve operations. Our contributions result in a high-performance software library for AVX2-ready processors. For example, our library computes digital signatures 19\\% (for Ed25519) and 29\\% (for Ed448) faster than previous optimized implementations. Also, our library improves by 10\\% and 20\\% the execution time of X25519 and X448, respectively.","tags":["RFC7748","RFC8032","elliptic curves","SIMD","AVX2","Curve25519","digital signatures"],"title":"High-performance Implementation of Elliptic Curve Cryptography Using Vector Instructions","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López","Eduardo Ochoa-Jiménez","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1541030400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541030400,"objectID":"78265d2ecee5f1c9a16d4914f6f53ae4","permalink":"https://armfazh.github.io/publication/faz-lor-ieeetc-2017/","publishdate":"2023-11-06T02:22:22.992349Z","relpermalink":"/publication/faz-lor-ieeetc-2017/","section":"publication","summary":"Since its introduction by Jao and De Feo in 2011, the supersingular isogeny Diffie-Hellman (SIDH) key exchange protocol has positioned itself as a promising candidate for post-quantum cryptography. One salient feature of the SIDH protocol is that it requires exceptionally short key sizes. However, the latency associated to SIDH is higher than the ones reported for other post-quantum cryptosystem proposals. Aiming to accelerate the SIDH runtime performance, we present in this work several algorithmic optimizations targeting both elliptic-curve and field arithmetic operations. We introduce in the context of the SIDH protocol a more efficient approach for calculating the elliptic curve operation $P+[k]Q$. Our strategy achieves a factor 1.4 speedup compared with the popular variable-three-point ladder algorithm regularly used in the SIDH shared secret phase. Moreover, profiting from pre-computation techniques our algorithm yields a factor 1.7 acceleration for the computation of this operation in the SIDH key generation phase. We also present an optimized evaluation of the point tripling formula, and discuss several algorithmic and implementation techniques that lead to faster field arithmetic computations. A software implementation of the above improvements on an Intel Skylake Core i7-6700 processor gives a factor 1.33 speedup against the state-of-the-art software implementation of the SIDH protocol reported by Costello-Longa-Naehrig in CRYPTO 2016.","tags":["Diffie-Hellman","scalar multiplication","elliptic curves","Montgomery reduction","Montgomery ladder","isogeny","post-quantum cryptography"],"title":"A Faster Software Implementation of the Supersingular Isogeny Diffie-Hellman Key Exchange Protocol","type":"publication"},{"authors":["Thomaz Oliveira","Julio López","Hüseyin Hişil","Armando Faz-Hernández","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"ed4061d9a9498d48ecef9c5af33d7d6d","permalink":"https://armfazh.github.io/publication/oliveira-lhfr-sac-2017/","publishdate":"2023-11-06T02:22:23.030732Z","relpermalink":"/publication/oliveira-lhfr-sac-2017/","section":"publication","summary":"In the RFC7748 memorandum, the Internet Research Task Force specified a Montgomery-ladder scalar multiplication function based on two recently adopted elliptic curves, Curve25519 and Curve448. The purpose of this function is to support the Diffie-Hellman key exchange algorithm that will be included in the forthcoming version of the Transport Layer Security cryptographic protocol. In this paper, we describe a ladder variant that permits to accelerate the fixed-point multiplication function inherent to the Diffie-Hellman key pair generation phase. Our proposal combines a right-to-left version of the Montgomery ladder along with the pre-computation of constant values directly derived from the base-point and its multiples. To our knowledge, this is the first proposal of a Montgomery ladder procedure for prime elliptic curves that admits the extensive use of pre-computation. In exchange of very modest memory resources and a small extra programming effort, the proposed ladder obtains significant speedups for software implementations. Moreover, our proposal fully complies with the RFC7748 specification. A software implementation of the X25519 and X448 functions using our pre-computable ladder yields an acceleration factor of roughly 1.20, and 1.25 when implemented on the Haswell and the Skylake micro-architectures, respectively.","tags":["RFC7748","scalar multiplication","elliptic curves","Montgomery ladder"],"title":"How to (Pre-)Compute a Ladder: Improving the Performance of X25519 and X448","type":"publication"},{"authors":["Armando Faz-Hernandez","Julio López","Ana Karina D. S. de Oliveira"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"0bfad6622a6affa6faee6b19229eb20e","permalink":"https://armfazh.github.io/publication/faz-lo-apkc-2018/","publishdate":"2023-11-06T02:22:22.97272Z","relpermalink":"/publication/faz-lo-apkc-2018/","section":"publication","summary":"The latest processors have included extensions to the instruction set architecture tailored to speed up the execution of cryptographic algorithms. Like the AES New Instructions (AES-NI) that target the AES encryption algorithm, the release of the SHA New Instructions (SHA-NI), designed to support the SHA-256 hash function, introduces a new scenario for optimizing cryptographic software. In this work, we present a performance evaluation of several cryptographic algorithms, hash-based signatures and data encryption, on platforms that support AES-NI and/or SHA-NI. In particular, we revisited several optimization techniques targeting multiple-message hashing, and as a result, we reduce by 21\\% the running time of this task by means of a pipelined SHA-NI implementation. In public-key cryptography, multiple-message hashing is one of the critical operations of the XMSS and XMSS$^\\text{MT}$ post-quantum hash-based digital signatures. Using SHA-NI extensions, signatures are computed $4\\times$ faster; however, our pipelined SHA-NI implementation increased this speedup factor to $4.3\\times$. For symmetric cryptography, we revisited the implementation of AES modes of operation and reduced by 12\\% and 7\\% the running time of CBC decryption and CTR encryption, respectively.","tags":["hash-based signatures","digital signatures","SHA-NI","AES-NI","SIMD","SHA2","parallel","data encryption","vector instructions"],"title":"SoK: A Performance Evaluation of Cryptographic Instruction Sets on Modern Architectures","type":"publication"},{"authors":["Armando Faz-Hernández","Hayato Fujii","Diego F. Aranha","Julio López"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"3e8e69bb1bd5c746decfa209d91fd8b9","permalink":"https://armfazh.github.io/publication/faz-fal-space-2017/","publishdate":"2023-11-06T02:22:23.012359Z","relpermalink":"/publication/faz-fal-space-2017/","section":"publication","summary":"Digital signatures provide a means to publicly authenticate messages sent over an insecure channel. Recently, the Quotient Digital Signature Algorithm (qDSA) was introduced aiming key-compatibility with the Diffie-Hellman X25519 function. Due to the novelty of qDSA, there remains a need for an optimized implementation that allows identifying the real impact of this new algorithm. In this work, we focus on the secure and efficient implementation of qDSA. By leveraging the use of precomputation on the right-to-left Joye's algorithm, we reduced the running time of signature generation by 30-35\\%, and the running time of the verification procedure by 19\\%. In addition, for increased security, we show a verification method that validates qDSA signatures unequivocally. All of these improvements were included into an optimized software library targeting 32-bit ARM and 64-bit Intel architectures. The improved performance achieved in these platforms, it positions qDSA as a competitive alternative for deploying digital signatures efficiently and securely.","tags":["digital signatures","scalar multiplication","elliptic curves","Montgomery ladder","ARM","x64"],"title":"A Secure and Efficient Implementation of the Quotient Digital Signature Algorithm (qDSA)","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1477958400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477958400,"objectID":"cce931ab810f2d1f6ac7abd2e0a3f550","permalink":"https://armfazh.github.io/publication/faz-lopez-sbseg-2016/","publishdate":"2023-11-06T02:22:23.050829Z","relpermalink":"/publication/faz-lopez-sbseg-2016/","section":"publication","summary":"The P-384 is one of the standardized elliptic curves by ANSI and NIST. This curve provides a 192-bit security level and is used in the computation of digital signatures and key-agreement protocols. Although several publicly-available cryptographic libraries support the P-384 curve, they have a poor performance. In this work, we present software techniques for accelerating cryptographic operations using the P-384 curve; first, we use the latest vector instructions of Intel processors to implement the prime field arithmetic; second, we devise a parallel scheduling of the complete formulas for point addition law. As a result, on Skylake micro-architecture, our software implementation is 15\\% and 40\\% faster than the OpenSSL library for computing ECDSA signatures and the ECDH protocol, respectively.","tags":["SIMD","prime field","elliptic curves","P-384"],"title":"Speeding up Elliptic Curve Cryptography on the P-384 Curve","type":"publication"},{"authors":["Armando Faz-Hernández","Roberto Cabral","Diego F. Aranha","Julio López"],"categories":null,"content":"","date":1446336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1446336000,"objectID":"59cd44619ab0490a4a51de4bf5ebefb9","permalink":"https://armfazh.github.io/publication/faz-cal-sbseg-2015/","publishdate":"2023-11-06T02:22:23.068933Z","relpermalink":"/publication/faz-cal-sbseg-2015/","section":"publication","summary":"A implementação segura de um algoritmo criptográfico não é uma tarefa trivial nem mesmo para os programadores mais experientes, pois requer um conhecimento cuidadoso não apenas do próprio algoritmo, mas também da arquitetura alvo. Neste minicurso, vamos nos concentrar em descrever os aspectos que ajudam a tornar uma implementação de criptografia em software eficiente e segura. Do lado da eficiência, detalharemos como os conjuntos avançados de instruções aceleram a execução dos algoritmos criptográficos a seguir: o algoritmo de encriptação AES, a função de resumo SHA3 e o protocolo de acordo de chaves baseado na curva elíptica Curve25519. Pensando no desenvolvimento seguro, mostraremos como algumas implementações são vulneráveis contra ataques de canais laterais, adicionalmente apresentaremos técnicas que mitigam ditos ataques evitando assim o vazamento de informação secreta.","tags":["cryptography","prime field","AES","elliptic curves","SHA3"],"title":"Implementação Eficiente e Segura de Algoritmos Criptográficos","type":"publication"},{"authors":["Armando Faz-Hernández","Patrick Longa","Ana H. Sánchez"],"categories":null,"content":"","date":1427846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1427846400,"objectID":"aa0a96ead29c7137eaca8e560a274f7a","permalink":"https://armfazh.github.io/publication/faz-ls-jcen-2015/","publishdate":"2023-11-06T02:22:23.086845Z","relpermalink":"/publication/faz-ls-jcen-2015/","section":"publication","summary":"We propose efficient algorithms and formulas that improve the performance of side channel protected elliptic curve computations with special focus on scalar multiplication exploiting the Gallant-Lambert-Vanstone (CRYPTO 2001) and Galbraith-Lin-Scott (EUROCRYPT 2009) methods. Firstly, by adapting Feng et al.'s recoding to the GLV setting, we derive new regular algorithms for variable-base scalar multiplication that offer protection against simple side-channel and timing attacks. Secondly, we propose an efficient, side-channel protected algorithm for fixed-base scalar multiplication which combines Feng et al.'s recoding with Lim-Lee's comb method. Thirdly, we propose an efficient technique that interleaves ARM and NEON-based multiprecision operations over an extension field to improve performance of GLS curves on modern ARM processors. Finally, we showcase the efficiency of the proposed techniques by implementing a state-of-the-art GLV-GLS curve in twisted Edwards form defined over $\\mathbb{F}_{p^2}$, which supports a four-dimensional decomposition of the scalar and is fully protected against timing attacks. Analysis and performance results are reported for modern x64 and ARM processors. For instance, we compute a variable-base scalar multiplication in 89,000 and 244,000 cycles on an Intel Ivy Bridge and an ARM Cortex-A15 processor (respect.); using a precomputed table of 6 KB, we compute a fixed-base scalar multiplication in 49,000 and 116,000 cycles (respect.); and using a precomputed table of 3KB, we compute a double-scalar multiplication in 115,000 and 285,000 cycles (respect.). The proposed techniques represent an important improvement of the state-of-the-art performance of elliptic curve computations, and allow us to set new speed records in several modern processors. The techniques also reduce the cost of adding protection against timing attacks in the computation of GLV-based variable-base scalar multiplication to below 10\\%. This work is the extended version of a publication that appeared at CT-RSA (Faz-Hernández et al. Topics in Cryptology, CT-RSA 2014, vol. 8366, pp. 1-27 2014).","tags":["ARM","prime field","elliptic curves","scalar multiplication"],"title":"Efficient and secure algorithms for GLV-based scalar multiplication and their implementation on GLV-GLS curves (extended version)","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"0b234a97cc66c2ba35289514f6a8f8a5","permalink":"https://armfazh.github.io/publication/faz-lopez-latincrypt-2015/","publishdate":"2023-11-06T02:22:23.106626Z","relpermalink":"/publication/faz-lopez-latincrypt-2015/","section":"publication","summary":"AVX2 is the newest instruction set on the Intel Haswell processor that provides simultaneous execution of operations over vectors of 256 bits. This work presents the advances on the applicability of AVX2 on the development of an efficient software implementation of the elliptic curve Diffie-Hellman protocol using the Curve25519 elliptic curve. Also, we will discuss some advantages that vector instructions offer as an alternative method to accelerate prime field and elliptic curve arithmetic. The performance of our implementation shows a slight improvement against the fastest state-of-the-art implementations.","tags":["AVX2","prime field","SIMD","elliptic curves","Curve25519","scalar multiplication"],"title":"Fast Implementation of Curve25519 Using AVX2","type":"publication"},{"authors":["Armando Faz-Hernández","Julio López"],"categories":null,"content":"","date":1414800000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1414800000,"objectID":"3ce43193ed4449e37b2ca96dad18de92","permalink":"https://armfazh.github.io/publication/faz-lopez-sbseg-2014/","publishdate":"2023-11-06T02:22:23.123505Z","relpermalink":"/publication/faz-lopez-sbseg-2014/","section":"publication","summary":"AVX2 is the newest instruction set on Intel Haswell processor that provides simultaneous execution of operations over vectors of data. This work presents the advances on the applicability of AVX2 on the development of prime field arithmetic, which is a building block for the construction of Elliptic Curve Cryptosystems. Having as a goal the efficient and secure implementation of prime field arithmetic, we show some advantages that vector instructions offer compared against 64-bit implementations. In order to validate the results of our research, we present a benchmark obtained on a Haswell processor.","tags":["AVX2","prime field","SIMD"],"title":"On Software Implementation of Arithmetic Operations on Prime Fields using AVX2","type":"publication"},{"authors":["Armando Faz-Hernández","Patrick Longa","Ana H. Sánchez"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"1d179a10b7b77ba1ccb9338dd522373b","permalink":"https://armfazh.github.io/publication/faz-ls-ctrsa-2014/","publishdate":"2023-11-06T02:22:23.141829Z","relpermalink":"/publication/faz-ls-ctrsa-2014/","section":"publication","summary":"We propose efficient algorithms and formulas that improve the performance of side-channel protected scalar multiplication exploiting the Gallant-Lambert-Vanstone (CRYPTO 2001) and Galbraith-Lin-Scott (EUROCRYPT 2009) methods. Firstly, by adapting Feng et al.'s recoding to the GLV setting, we derive new regular algorithms for variable-base scalar multiplication that offer protection against simple side-channel and timing attacks. Secondly, we propose an efficient technique that interleaves ARM-based and NEON-based multiprecision operations over an extension field, as typically found on GLS curves and pairing computations, to improve performance on modern ARM processors. Finally, we showcase the efficiency of the proposed techniques by implementing a state-of-the-art GLV-GLS curve in twisted Edwards form defined over $\\mathbb{F}_{p^2}$, which supports a four dimensional decomposition of the scalar and runs in constant time, i.e., it is fully protected against timing attacks. For instance, using a precomputed table of only 512 bytes, we compute a variable-base scalar multiplication in 92,000 cycles on an Intel Ivy Bridge processor and in 244,000 cycles on an ARM Cortex-A15 processor. Our benchmark results and the proposed techniques contribute to the improvement of the state-of-the-art performance of elliptic curve computations. Most notably, our techniques allow us to reduce the cost of adding protection against timing attacks in the GLV-based variable-base scalar multiplication computation to below 10\\%.","tags":["ARM","GLV endomorphism","GLS endomorphism","elliptic curves","scalar multiplication"],"title":"Efficient and Secure Algorithms for GLV-Based Scalar Multiplication and Their Implementation on GLV-GLS Curves","type":"publication"},{"authors":["Armando Faz-Hernández"],"categories":null,"content":"","date":1328054400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1328054400,"objectID":"307f27494c29ac87dfd9edbe50c9c67d","permalink":"https://armfazh.github.io/publication/faz-master-thesis/","publishdate":"2023-11-06T02:22:23.181969Z","relpermalink":"/publication/faz-master-thesis/","section":"publication","summary":"Elliptic curve cryptography has a high significance on secure computer applications, it provides mechanisms to ensure privacy on data, authentication among communicating entities, as well as the integrity of a message sent by an insecure channel. Nowadays, there are cryptographic algorithms that ensure these security services, however, some of them require a large amount of computer processing. Such is the case of the scalar multiplication, which is a fundamental operation for the implementation of elliptic curve cryptography. It is, therefore, essential that this operation be performed efficiently. This thesis has focused on the analysis of algorithms and programming techniques to reduce the computation time of the scalar multiplication. From the algorithmic standpoint, Koblitz elliptic curves allow that the computation of the scalar multiplication can be quickly performed by applying the Frobenius’s endomorphism, without using point doublings. The formulation of a parallel algorithm allows its implementation in a multicore processor. Extended instruction sets included in the latest computer architectures enable parallel processing of multiple data sets. Within these sets, the use of the carry-less multiplier enhances the performance of operations over finite fields, thereby resulting in acceleration of computation of scalar multiplication. The results of this research show the speedup in the parallelization of the scalar multiplication, optimizing both algorithmically and with the use of recent technologies.","tags":["carryless multiplier","elliptic curves","binary fields","PCLMULQDQ","Koblitz curves"],"title":"Implementación multinúcleo de la multiplicación escalar en curvas de Koblitz","type":"publication"},{"authors":["Diego F. Aranha","Armando Faz-Hernández","Julio López","Francisco Rodríguez-Henríquez"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"65254bd02781bee8b53238601511644e","permalink":"https://armfazh.github.io/publication/aranha-flr-latincrypt-2012/","publishdate":"2023-11-06T02:22:23.161804Z","relpermalink":"/publication/aranha-flr-latincrypt-2012/","section":"publication","summary":"We design a state-of-the-art software implementation of field and elliptic curve arithmetic in standard Koblitz curves at the 128-bit security level. Field arithmetic is carefully crafted by using the best formulae and implementation strategies available, and the increasingly common native support to binary field arithmetic in modern desktop computing platforms. The $i$-th power of the Frobenius automorphism on Koblitz curves is exploited to obtain new and faster interleaved versions of the well-known $\\tau$-NAF scalar multiplication algorithm. The usage of the $\\tau^{\\lfloor m/3 \\rfloor}$ and $\\tau^{\\lfloor m/4 \\rfloor}$ maps are employed to create analogues of the 3- and 4-dimensional GLV decompositions and in general, the $\\lfloor m/s \\rfloor$-th power of the Frobenius automorphism is applied as an analogue of an $s$-dimensional GLV decomposition. The effectiveness of these techniques is illustrated by timing the scalar multiplication operation for fixed, random and multiple points. In particular, our library is able to compute a random point scalar multiplication in just below 105 clock cycles, which sets a new speed record across all curves with or without endomorphisms defined over binary or prime fields. The results of our optimized implementation suggest a trade-off between speed, compliance with the published standards and side-channel protection. Finally, we estimate the performance of curve-based cryptographic protocols instantiated using the proposed techniques and compare our results to related work.","tags":["carryless multiplier","elliptic curves","binary fields","PCLMULQDQ"],"title":"Faster Implementation of Scalar Multiplication on Koblitz Curves","type":"publication"},{"authors":["Jonathan Taverne","Armando Faz-Hernández","Diego F. Aranha","Francisco Rodríguez-Henríquez","Darrel Hankerson","Julio López"],"categories":null,"content":"","date":1314835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1314835200,"objectID":"be765957fc30ffafc8c238047f979a8b","permalink":"https://armfazh.github.io/publication/taverne-farhl-jcen-2011/","publishdate":"2023-11-06T02:22:23.202625Z","relpermalink":"/publication/taverne-farhl-jcen-2011/","section":"publication","summary":"The availability of a new carry-less multiplication instruction in the latest Intel desktop processors significantly accelerates multiplication in binary fields and hence presents the opportunity for reevaluating algorithms for binary field arithmetic and scalar multiplication over elliptic curves. We describe how to best employ this instruction in field multiplication and the effect on performance of doubling and halving operations. Alternate strategies for implementing inversion and half-trace are examined to restore most of their competitiveness relative to the new multiplier. These improvements in field arithmetic are complemented by a study on serial and parallel approaches for Koblitz and random curves, where parallelization strategies are implemented and compared. The contributions are illustrated with experimental results improving the state-of-the-art performance of halving and doubling-based scalar multiplication on NIST curves at the 112- and 192-bit security levels and a new speed record for side-channel-resistant scalar multiplication in a random curve at the 128-bit security level. The algorithms presented in this work were implemented on Westmere and Sandy Bridge processors, the latest generation Intel microarchitectures.","tags":["carryless multiplier","elliptic curves","binary fields","PCLMULQDQ"],"title":"Speeding scalar multiplication over binary elliptic curves using the new carry-less multiplication instruction","type":"publication"},{"authors":["Jonathan Taverne","Armando Faz-Hernández","Diego F. Aranha","Francisco Rodríguez-Henríquez","Darrel Hankerson","Julio López"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293840000,"objectID":"96bdd7b7c72a7cd5e30613a6c0889db7","permalink":"https://armfazh.github.io/publication/taverne-farhl-ches-2011/","publishdate":"2023-11-06T02:22:23.222941Z","relpermalink":"/publication/taverne-farhl-ches-2011/","section":"publication","summary":"The availability of a new carry-less multiplication instruction in the latest Intel desktop processors significantly accelerates multiplication in binary fields and hence presents the opportunity for reevaluating algorithms for binary field arithmetic and scalar multiplication over elliptic curves. We describe how to best employ this instruction in field multiplication and the effect on performance of doubling and halving operations. Alternate strategies for implementing inversion and half-trace are examined to restore most of their competitiveness relative to the new multiplier. These improvements in field arithmetic are complemented by a study on serial and parallel approaches for Koblitz and random curves, where parallelization strategies are implemented and compared. The contributions are illustrated with experimental results improving the state-of-the-art performance of halving and doubling-based scalar multiplication on NIST curves at the 112- and 192-bit security levels, and a new speed record for side-channel resistant scalar multiplication in a random curve at the 128-bit security level.","tags":["carryless multiplier","elliptic curves","binary fields","PCLMULQDQ"],"title":"Software Implementation of Binary Elliptic Curves: Impact of the Carry-Less Multiplier on Scalar Multiplication","type":"publication"}]